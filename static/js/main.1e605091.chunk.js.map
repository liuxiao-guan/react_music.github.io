{"version":3,"sources":["components/utils/request.ts","components/IndexContent.tsx","components/utils/banner.ts","components/find_music/RecommendMusic.tsx","components/find_music/TopMusic.tsx","components/find_music/Sheet.tsx","components/find_music/Liver.tsx","components/find_music/Musician.tsx","components/my_music/MyMusic.tsx","components/Login.tsx","components/utils/login.ts","components/NotFound.tsx","components/detail/TopJumper.tsx","components/detail/createThrottle.tsx","components/search/SearchResult.tsx","components/utils/search.ts","components/utils/lyric.ts","components/detail/Lyric.tsx","components/utils/comment.ts","components/detail/Comment.tsx","components/detail/Detail.tsx","components/search/SearchTop.tsx","components/IndexTopMenu.tsx","components/ProjectRouter.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["request","axios","create","baseURL","process","IndexContent","type","useState","imageUrl","carousel","setCarousel","url","method","params","then","response","res","data","code","banners","id","style","textAlign","top","left","fontSize","icon","UserOutlined","to","className","autoplay","map","item","index","src","alt","RecommendMusic","console","log","useNavigate","position","onClick","window","open","TopMusic","Sheet","Liver","Musician","MyMusic","FormItem","Form","Item","Login","name","setName","password","setPassWord","history","placeholder","maxLength","onChange","event","target","value","phone","props","loginThroughPhone","alert","NotFound","color","TopJumper","show","switchShow","useEffect","listener","callback","delay","thisArg","lastInvokeTime","Date","now","_delay","Number","args","call","createThrottle","shouldShow","scrollY","document","addEventListener","removeEventListener","scrollTo","counter","SearchResult","inputPageNum","setInputPageNum","limit","page","total","songList","artists","album","artist","img1v1Url","duration","copyrightId","status","alias","rtype","ftype","mvid","fee","rUrl","mark","result","setResult","keyword","useParams","goPage","pageNum","keywords","offset","songs","songCount","theme","mode","e","showPlayList","itemLayout","dataSource","header","renderItem","actions","Meta","avatar","backgroundColor","shape","size","title","description","margin","getMinutes","getSeconds","twoToneColor","disabled","width","Lyric","lyric","lyricList","time","lyc","res1","lrc","split","forEach","temp","push","filter","v","goDetail","Comment","commentlist","user","nickname","avatarUrl","beReplied","pendantData","showFloorComment","commentId","content","contentResource","timeStr","needDisplayTime","expressionUrl","commentLocationType","parentCommentId","decoration","repliedMark","liked","likedCount","hotcommentlist","vid","comments","hotComments","border","Detail","React","Component","SearchTop","goToSearchPage","prefix","SearchOutlined","onPressEnter","this","SubMenu","Menu","IndexTopMenu","state","current","redirect","handleClick","setState","key","recommendClick","path","element","selectedKeys","CustomerServiceOutlined","ItemGroup","HeartOutlined","ProjectRouter","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1e605091.chunk.js","sourcesContent":["import axios from \"axios\";\n//创建axios请求对象，方便api使用\nconst request = axios.create(\n    {\n        baseURL: process.env.REACT_APP_BASEURL,\n    }\n)\nexport default request;","import React, {useState} from 'react'\nimport {HashRouter as Router, Route, Routes} from \"react-router-dom\";\nimport {Button,Carousel} from \"antd\";\nimport {UserOutlined} from '@ant-design/icons'\nimport 'antd/dist/antd.css'\nimport IndexTopMenu from \"./IndexTopMenu\";\nimport './IndexContent.css'\nimport {banner} from \"./utils/banner\";\nimport { Content } from 'antd/lib/layout/layout';\nimport { Link, HashRouter, BrowserRouter} from 'react-router-dom'\nimport RecommendMusic from './find_music/RecommendMusic';\nimport TopMusic from './find_music/TopMusic';\nimport Liver from './find_music/Liver';\nimport Sheet from './find_music/Sheet';\nimport Musician from './find_music/Musician';\nimport MyMusic from './my_music/MyMusic';\n\nimport NotFound from './NotFound';\nimport Login from './Login';\n\n//主页除了顶部菜单的内容部分\nexport default function IndexContent() {\n    const [carousel,setCarousel]=useState([{\n        imageUrl:'',\n    }]);\n    // banner(0).then((response)=>{\n    //     setCarousel(response.data.banners)\n    // })\n    banner(0).then((response)=>{\n        let res=response.data;\n        if(res.code===200){\n            setCarousel(res.banners);\n        }\n    })\n    return (\n        <div>\n            \n            {/* <IndexTopMenu/> */}\n            <div id='index' style={{textAlign: 'center', top: '50%', left: '50%', fontSize: 40}}>\n                这里是主页\n                <br/>\n                <Button icon={<UserOutlined/>}>\n                    <Link to=\"/login\">去登录</Link>\n                </Button>\n            </div>\n            <Carousel className='carousel' autoplay>\n                {carousel.map((item,index)=>{\n                    return <div key={index}><img src={item.imageUrl} alt=\"\"/></div>\n                })}\n            </Carousel>\n        </div>\n    )\n}","import request from \"./request\";\n\nexport const banner = (type:number) => {\nreturn request({\n    url:'banner',\n    method:'get',\n    params:type,\n})\n}","import React from 'react'\nimport {Button} from 'antd'\nimport {useNavigate} from 'react-router-dom'\nimport IndexTopMenu from \"../IndexTopMenu\";\n//推荐\nexport default function RecommendMusic() {\n    console.log('Hello')\n    const history = useNavigate()\n    return (\n        <div>\n            {/* <IndexTopMenu/> */}\n            <div id='recommend'\n                 style={{textAlign: 'center', position: 'absolute', top: '50%', left: '50%', fontSize: 40}}>\n                推荐音乐\n                <br/>\n                <Button onClick={() => {\n                    window.open('/','_self')//跳转回到主页，原来的navigate hook有搜索bug\n                }}>\n                    返回首页\n                </Button>\n            </div>\n        </div>\n    )\n}","import React from 'react'\nimport {Button} from 'antd'\nimport {useNavigate} from 'react-router-dom'\nimport IndexTopMenu from \"../IndexTopMenu\";\n//热门\nexport default function TopMusic() {\n    console.log('Top')\n    const history = useNavigate()\n    return (\n        <div>\n            {/* <IndexTopMenu/> */}\n            <div id='top' style={{textAlign: 'center', position: 'absolute', top: '50%', left: '50%', fontSize: 40}}>\n                最热门音乐\n                <br/>\n                <Button onClick={() => {\n                    window.open('/','_self')//跳转回到主页，原来的navigate hook有搜索bug\n                }}>\n                    返回首页\n                </Button>\n            </div>\n        </div>\n    )\n}","import React from 'react'\nimport {Button} from 'antd'\nimport {useNavigate} from 'react-router-dom'\nimport IndexTopMenu from \"../IndexTopMenu\";\n//歌单\nexport default function Sheet() {\n    console.log('Sheet')\n    const history = useNavigate()\n    return (\n        <div>\n            {/* <IndexTopMenu/> */}\n            <div id='sheet' style={{textAlign: 'center', position: 'absolute', top: '50%', left: '50%', fontSize: 40}}>\n                歌单\n                <br/>\n                <Button onClick={() => {\n                    window.open('/','_self')//跳转回到主页，原来的navigate hook有搜索bug\n                }}>\n                    返回首页\n                </Button>\n            </div>\n        </div>\n    )\n}","import React from 'react'\nimport {Button} from 'antd'\nimport 'antd/dist/antd.css'\nimport {useNavigate} from 'react-router-dom'\nimport IndexTopMenu from \"../IndexTopMenu\";\n//电台\nexport default function Liver() {\n    console.log('Liver')\n    const history = useNavigate()\n    return (\n        <div>\n            {/* <IndexTopMenu/> */}\n            <div id='liver' style={{textAlign: 'center', position: 'absolute', top: '50%', left: '50%', fontSize: 40}}>\n                电台\n                <br/>\n                <Button onClick={() => {\n                   window.open('/','_self')//跳转回到主页，原来的navigate hook有搜索bug\n                }}>\n                    返回首页\n                </Button>\n            </div>\n        </div>\n    )\n}","import React from 'react'\nimport {Button} from 'antd'\nimport {useNavigate} from 'react-router-dom'\nimport IndexTopMenu from \"../IndexTopMenu\";\n//歌手\nexport default function Musician() {\n    console.log('Musician')\n    const history = useNavigate()\n    return (\n        <div>\n            {/* <IndexTopMenu/> */}\n            <div id='musician'\n                 style={{textAlign: 'center', position: 'absolute', top: '50%', left: '50%', fontSize: 40}}>\n                歌手列表\n                <br/>\n                <Button onClick={() => {\n                    window.open('/','_self')//跳转回到主页，原来的navigate hook有搜索bug\n                }}>\n                    返回首页\n                </Button>\n            </div>\n        </div>\n    )\n}","import React from \"react\";\nimport IndexTopMenu from \"../IndexTopMenu\";\nimport {Button} from \"antd\";\n//我的音乐页面\nexport default function MyMusic(){\n    console.log(\"myMusic\")\n    return(\n        <div>\n            {/*<IndexTopMenu/>*/}\n        <div id=\"my\" style={{textAlign:'center',position:'absolute',top:'50%',left:'50%',fontSize:40}}>\n            我的音乐\n            <br/>\n            <Button onClick={() => {\n                window.open('/','_self')//跳转回到主页，原来的navigate hook有搜索bug\n            }}>\n                返回首页\n            </Button>\n        </div>\n            </div>\n    );\n}","import React, {useState} from \"react\";\nimport {Form, Input, Button, Alert} from 'antd'\nimport {useNavigate} from 'react-router-dom'\nimport 'antd/dist/antd.css'\nimport './login.css'\nimport axios from 'axios'\nimport ReactDOM from \"react-dom\";\nimport {search} from \"./utils/search\";\nimport {login} from \"./utils/login\";\n\nconst FormItem = Form.Item;\n//登陆页面\nexport default function Login() {\n    const [name, setName] = useState('');//用户名\n    const [password, setPassWord] = useState('');//密码\n    const history = useNavigate();\n    return (\n        <Form className=\"login-form\">\n            <FormItem>\n                <Input placeholder=\"请输入用户名\" maxLength={20} onChange={(event) => {\n                    setName(event.target.value);\n                }}/>\n            </FormItem>\n            <FormItem>\n                <Input placeholder=\"请输入密码\" maxLength={16} type=\"password\" onChange={(event) => {\n                    setPassWord(event.target.value);\n                }}/>\n            </FormItem>\n            <FormItem>\n                <Button type=\"primary\" id=\"login-button\" onClick={() => {\n                    loginThroughPhone(name, password).then((response) => {\n                        let res = response.data;\n                        console.log(res.code)\n                        if (res.code === 200) {\n                            history('/my');//如果登陆成功，则跳转到我的音乐页面\n                        } else {\n                            alert(\"登陆失败，请检查用户名或密码\");//如果不成功，则提示登陆失败\n\n                            //下面是通过antD里面Alert组件的方式跳转,不过会打开新的页面\n                            // ReactDOM.render(<Alert\n                            //     message=\"错误\"\n                            //     description=\"登陆失败，请检查用户名或密码\"\n                            //     type=\"error\"\n                            //     showIcon/>,document.getElementById('root'));\n                        }\n                    });\n                }}>登录</Button>\n            </FormItem>\n        </Form>\n    );\n}\n\nfunction loginThroughPhone(phone: string, password: string) {\n    return login(\n        {\n            phone:phone,\n            password:password,\n        }\n    );\n}","import request from \"./request\";\ninterface LoginParams{\n    phone:string,\n    password:string,\n}\nexport const login = (props:LoginParams)=>{\n    return request({\n        url:'login/cellphone',\n        method:'get',\n        params:props,\n        }\n    )\n}","import React from 'react'\n//404页面\nexport default function NotFound(){\n  return(\n    <div id='index' style={{ textAlign: 'center', position: 'absolute',\n      top: '50%', left: '50%', fontSize: 40,color:'red' }}>\n      404NotFound!!!!\n    </div>\n  );\n}","import React, { useEffect, useState } from 'react';\r\n//import { createThrottle } from \"../assets/helpers\";\r\nimport { createThrottle } from './createThrottle';\r\n//import './TopJumper.scss'\r\nimport './TopJumper.css';\r\nimport { VerticalAlignTopOutlined, HeartOutlined } from '@ant-design/icons'\r\n\r\nfunction TopJumper() {\r\n  const [show, switchShow] = useState(false);\r\n  useEffect(()=>{\r\n    const listener = createThrottle(()=>{\r\n      const shouldShow = window.scrollY > 300;\r\n      if (shouldShow !== show) {\r\n        switchShow(shouldShow)\r\n      }\r\n    }, 500) as EventListener;\r\n    document.addEventListener('scroll', listener);\r\n    return ()=>document.removeEventListener('scroll', listener);\r\n  }, [show])\r\n\r\n  return show ? (\r\n    <div className=\"top-jumper\" onClick={()=>window.scrollTo(0, 0)}>\r\n     <span className=\"text\"> </span>\r\n    </div>) : null;\r\n}\r\n\r\nexport default TopJumper;","/**\r\n * create a throttle callback\r\n * @param callback\r\n * @param delay\r\n * @param thisArg\r\n */\r\n export const createThrottle = (\r\n    callback: Function, \r\n    delay?: number, \r\n    thisArg?: unknown\r\n  ): Function =>{\r\n    let lastInvokeTime: number = Date.now();\r\n    const _delay = Number(delay) || 200\r\n    return (...args: any[]): void=>{\r\n      const now = Date.now()\r\n      if (now - _delay <= lastInvokeTime) {\r\n        return;\r\n      }\r\n      lastInvokeTime = now;\r\n      callback.call(thisArg, ...args)\r\n    }\r\n  }","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport HeartTwoTone from '@ant-design/icons/lib/icons/HeartTwoTone';\r\nimport { search } from \"../utils/search\";\r\nimport './SearchResult.css';\r\nimport { Avatar, Button, List, Menu, Result, Skeleton, Table } from \"antd\";\r\nimport { PlayCircleOutlined , DownloadOutlined } from \"@ant-design/icons/lib/icons\";\r\nimport TopJumper from \"../detail/TopJumper\";\r\n// import SearchResultList from \"./SearchResultList\";\r\n\r\n//封装歌曲结果对象\r\n/*\r\n* 不得不吐槽一下Typescript要求真多，这些参数是通过报错信息找到的，\r\n* 如果想看，可以在下面渲染的时候，在map中把value的类型去掉，并在li的渲染中直接渲染value，react会在报错信息中提示\r\n* 还不太清楚各个参数具体的类型，所以暂时都使用any\r\n* */\r\ninterface SongProps {\r\n    id: any,\r\n    name: any,\r\n    artists: any,\r\n    album: any,\r\n    duration: any,\r\n    copyrightId: any,\r\n    status: any,\r\n    alias: any,\r\n    rtype: any,\r\n    ftype: any,\r\n    mvid: any,\r\n    fee: any,\r\n    rUrl: any,\r\n    mark: any,\r\n}\r\nlet counter = 0;\r\n//第二版搜索结果\r\nexport default function SearchResult() {\r\n    const [inputPageNum, setInputPageNum] = useState('');\r\n    const [result, setResult] = useState({\r\n        // 类型\r\n        type: '1',\r\n        // 页容量\r\n        limit: 15,\r\n        // 页码\r\n        page: 1,\r\n        // 总条数\r\n        total: 0,\r\n        songList: [{\r\n            id: null,\r\n            name: null,\r\n            artists: [],\r\n            album: {\r\n                name: null,\r\n                artist: {\r\n                    img1v1Url: null\r\n                }\r\n            },\r\n            duration: '',\r\n            copyrightId: null,\r\n            status: null,\r\n            alias: null,\r\n            rtype: null,\r\n            ftype: null,\r\n            mvid: null,\r\n            fee: null,\r\n            rUrl: null,\r\n            mark: null,\r\n        }],\r\n    });\r\n    let { keyword } = useParams();\r\n    const hasPrevious = () => {\r\n        return counter === 1;\r\n    }\r\n    const goPage = (pageNum: number) => {\r\n        counter = pageNum;\r\n        search({\r\n            keywords: keyword,\r\n            limit: result.limit,\r\n            offset: (counter - 1) * result.limit,\r\n            type: result.type,\r\n        }).then((response) => {\r\n            let res = response.data;\r\n            setResult({\r\n                songList: res.result.songs,\r\n                total: res.result.songCount,\r\n                type: result.type,\r\n                limit: result.limit,\r\n                page: counter,\r\n            })\r\n        })\r\n    }\r\n    const nextPage = () => {\r\n        console.log(counter);\r\n        counter++;\r\n        goPage(counter);\r\n    }\r\n    const previousPage = () => {\r\n        console.log(counter);\r\n        counter--;\r\n        goPage(counter);\r\n    }\r\n    const handleInput = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setInputPageNum(e.target.value);\r\n    }\r\n    const submitInputPage = () => {\r\n        goPage(Number(inputPageNum));\r\n        setInputPageNum('');\r\n    }\r\n    const goDetail = (id: string | null, e: any) => {\r\n        console.log(id);\r\n        window.open(`#/detail/${id}`, '_self');\r\n    }\r\n    const showPlayList = (keyword: string | undefined, e: any) => {\r\n        window.open(`#/searchplaylist/${keyword}`, '_self');\r\n    }\r\n    useEffect(() => {\r\n        if (counter === 0) {\r\n            goPage(1);\r\n        }\r\n    })\r\n    // console.log(keyword);\r\n    // search({\r\n    //     keywords: keyword,\r\n    //     limit: result.limit,\r\n    //     offset: (result.page - 1) * result.limit,\r\n    //     type: result.type,\r\n    // }).then((response) => {\r\n    //     let res = response.data;\r\n    //     // console.log(res.code)\r\n    //     if (res.code === 200) {\r\n    //         setResult({\r\n    //             songList: res.result.songs,\r\n    //             total: res.result.songCount,\r\n    //             type: result.type,\r\n    //             limit: result.limit,\r\n    //             page: result.page,\r\n    //             playList: result.playList,\r\n    //             mvList: result.mvList,\r\n    //         })\r\n    //     }\r\n    // })\r\n\r\n    return (\r\n        <div>\r\n            <Menu theme='light' mode=\"horizontal\">\r\n                <Menu.Item key=\"song\">单曲</Menu.Item>\r\n                <Menu.Item>歌手</Menu.Item>\r\n                <Menu.Item>专辑</Menu.Item>\r\n                <Menu.Item>视频</Menu.Item>\r\n                <Menu.Item onClick={(e) => showPlayList(keyword, e)}>歌单</Menu.Item>\r\n            </Menu>\r\n\r\n            <div className=\"container\">\r\n                <List\r\n                    className=\"list\"\r\n                    itemLayout=\"horizontal\"\r\n                    dataSource={result.songList}\r\n                    header={\r\n                        <div className=\"title\" >\r\n                            <span id='keyword'>{keyword}</span>\r\n                            <span>找到了{result.total}条结果</span>\r\n                        </div>\r\n                    }\r\n                    renderItem={item => (\r\n                        <List.Item\r\n                            actions={[<a key=\"list-loadmore-edit\">下载 <DownloadOutlined /></a>]}\r\n                        >\r\n                            <List.Item.Meta\r\n                                style={{ fontSize: \"20px\" }}\r\n\r\n                                avatar={<Avatar style={{ backgroundColor: '#fa1a1ad9' }} shape=\"square\" size={40}>{item.album.name}</Avatar>\r\n                                    // src={item.album.artist.img1v1Url} \r\n                                }\r\n                                // https://p2.music.126.net/CcthX_ZCexIdriZADoNn3g==/109951165628166191.jpg?\r\n                                title={<a onClick={(e) => goDetail(item.id, e)}>{item.name}</a>}\r\n                                description={\r\n                                    <div>歌手:{item.artists.map((item: { name: any; }) => {\r\n                                        return item.name;\r\n                                    })}\r\n                                    </div>}\r\n                            />\r\n                            <div style={{ margin: 10 }}>时长  {new Date(item.duration).getMinutes()}:{new Date(item.duration).getSeconds()}</div>\r\n                            {console.log(item)}\r\n                            <div><PlayCircleOutlined />  <HeartTwoTone twoToneColor=\"#fa1a1a\" />\r\n                                {/* <HeartOutlined /> */}\r\n                            </div>\r\n                        </List.Item>\r\n                    )}\r\n                />\r\n\r\n                <div className=\"pages\">\r\n                    <Button onClick={previousPage} disabled={hasPrevious()}>上一页</Button>\r\n                    <Button onClick={nextPage}>下一页</Button>\r\n                    <span>请输入您想跳转的页面:</span>\r\n                    <input style={{ width: 40 }} value={inputPageNum} onChange={handleInput} />\r\n                    <Button onClick={submitInputPage}>跳转到此页</Button>\r\n                </div>\r\n            </div>\r\n        <TopJumper/>\r\n        </div>\r\n    );\r\n}\r\n// function search(keywords:any){\r\n//     return axios.get(\"http://localhost:3000/search\",{\r\n//         params:{\r\n//             keywords,\r\n//         }\r\n//     })\r\n// }","import request from \"./request\";\ninterface Iprops{\n    keywords:any,\n    limit:number,\n    offset:number,\n    type:string,\n}\nexport const search=(props:Iprops)=>{\n    return request({\n        url:'search',\n        method:'get',\n        params:props,\n    })\n}","import request from \"./request\";\r\ninterface Iprops{\r\n    // keywords:any,\r\n    // limit:number,\r\n    // offset:number,\r\n    // type:string,\r\n    id:string,\r\n}\r\nexport const lyric=(props:Iprops)=>{\r\n    return request({\r\n        url:'/lyric',\r\n        method:'get',\r\n        params:props,\r\n    })\r\n}","\r\nimport React, {useEffect, useState} from \"react\";\r\nimport {Link, useParams} from \"react-router-dom\";\r\n// import {search} from \"../utils/search\";\r\nimport { lyric } from \"../utils/lyric\";\r\nimport {Button} from \"antd\";\r\nimport TopJumper from \"./TopJumper\";\r\n\r\n//封装歌曲结果对象\r\n/*\r\n* 不得不吐槽一下Typescript要求真多，这些参数是通过报错信息找到的，\r\n* 如果想看，可以在下面渲染的时候，在map中把value的类型去掉，并在li的渲染中直接渲染value，react会在报错信息中提示\r\n* 还不太清楚各个参数具体的类型，所以暂时都使用any\r\n* */\r\ninterface SongProps {\r\n    id: any,\r\n    name: any,\r\n    artists: any,\r\n    album: any,\r\n    duration: any,\r\n    copyrightId: any,\r\n    status: any,\r\n    alias: any,\r\n    rtype: any,\r\n    ftype: any,\r\n    mvid: any,\r\n    fee: any,\r\n    rUrl: any,\r\n    mark: any,\r\n}\r\nexport interface lyricmodel{\r\n    time:string,\r\n    lyc:string,\r\n}\r\nlet counter=0;\r\n//第二版搜索结果\r\nexport default function Lyric() {\r\n    const [inputPageNum,setInputPageNum]=useState('');\r\n    const [result, setResult] = useState({\r\n        lyric:\"你好\",\r\n        lyricList:[{time:\"\",lyc:\"\"}],\r\n        \r\n    });\r\n    let {id} = useParams() ;\r\n    const hasPrevious=()=>{\r\n        return counter===1;\r\n    }\r\n    const goPage = (pageNum:number)=>{\r\n        counter=pageNum;\r\n       lyric({\r\n          \r\n           id:id as string,\r\n           \r\n        }).then((response)=>{\r\n            let res=response.data;\r\n            // console.log(res);\r\n            // console.log(res.lrc);\r\n            let res1 = res.lrc;\r\n            let lyricList = result.lyricList\r\n            // console.log(res1);\r\n            let lyc1  = res1.lyric as string\r\n            \r\n            lyc1.split(/[\\n]/) // 截取中括号\r\n      .forEach((item: string) => {\r\n        let temp: Array<string> = item.split(/\\[(.+?)\\]/)\r\n        lyricList.push(\r\n          {\r\n            time: temp[1], // 时间\r\n            lyc: temp[2] //歌词内容\r\n          })\r\n      })\r\n    lyricList = lyricList.filter((v: { [x: string]: any; }) => v['lyc']) // 去除无歌词内容\r\n    setResult({\r\n      lyric: res['lrc']['lyric'],\r\n      lyricList\r\n    })\r\n            // setResult({\r\n               \r\n            //     lyric:res.lrc.lyric,\r\n            // })\r\n        })\r\n    }\r\n    const nextPage = () => {\r\n        console.log(counter);\r\n        counter++;\r\n        goPage(counter);\r\n    }\r\n    const previousPage=()=>{\r\n        console.log(counter);\r\n        counter--;\r\n        goPage(counter);\r\n    }\r\n    const handleInput=(e:React.ChangeEvent<HTMLInputElement>)=>{\r\n        setInputPageNum(e.target.value);\r\n    }\r\n    const submitInputPage=()=>{\r\n        goPage(Number(inputPageNum));\r\n        setInputPageNum('');\r\n    }\r\n    const goDetail=()=>{\r\n        window.open('#/detail','_self');\r\n    }\r\n    useEffect(()=>{\r\n        if(counter===0){\r\n           goPage(1);\r\n        }\r\n    })\r\n\r\n    return (\r\n        <><div>\r\n            {/* {result.lyric} */}\r\n            {/* <h1>找到了{result.total}条结果</h1>\r\n    <Button onClick={previousPage} disabled={hasPrevious()}>上一页</Button>\r\n    <Button onClick={nextPage}>下一页</Button>\r\n    请输入您想跳转的页面:<input value={inputPageNum} onChange={handleInput}/>\r\n    <Button onClick={submitInputPage}>跳转到此页</Button> */}\r\n            <ul style={{margin:\"2% 10% 0 10%\"}}>\r\n                {result.lyricList.map((value: lyricmodel, index) => {\r\n                    return (\r\n                        <li key={index} onClick={goDetail}>\r\n                            {value.time}-----------歌词:{value.lyc}\r\n                        </li>\r\n                    );\r\n                })}\r\n            </ul>\r\n            \r\n            \r\n        </div></>\r\n    );\r\n}\r\n","import request from \"./request\";\r\ninterface Iprops{\r\n    id:any,\r\n    limit:number,\r\n    offset:number,\r\n    //before:string,\r\n}\r\nexport const comment=(props:Iprops)=>{\r\n    return request({\r\n        url:'/comment/music',\r\n        method:'get',\r\n        params:props,\r\n    })\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\n//import {search} from \"../utils/search\";\r\nimport { comment } from \"../utils/comment\";\r\nimport { Avatar, Button, List } from \"antd\";\r\nimport { VerticalAlignTopOutlined, HeartOutlined } from '@ant-design/icons'\r\nimport moment from 'moment';\r\nimport Item from \"antd/lib/list/Item\";\r\nimport {LikeOutlined,CommentOutlined,LikeTwoTone} from \"@ant-design/icons/lib/icons\";\r\nimport { Footer } from \"antd/lib/layout/layout\";\r\n\r\n//封装歌曲结果对象\r\n/*\r\n* 不得不吐槽一下Typescript要求真多，这些参数是通过报错信息找到的，\r\n* 如果想看，可以在下面渲染的时候，在map中把value的类型去掉，并在li的渲染中直接渲染value，react会在报错信息中提示\r\n* 还不太清楚各个参数具体的类型，所以暂时都使用any\r\n* */\r\ninterface CommentProps {\r\n    user: any,\r\n    beReplied: any,\r\n    artists: any,\r\n    pendantData: any,\r\n    showFloorComment: any,\r\n    status: any,\r\n    commentId: any,\r\n    content: any,\r\n    contentResource: any,\r\n    time: any,\r\n    timeStr: any,\r\n    needDisplayTime: any,\r\n    expressionUrl: any,\r\n    commentLocationType: any,\r\n    parentCommentId: any,\r\n    decoration: any,\r\n    repliedMark: any,\r\n    liked: any,\r\n    likedCount:any,\r\n}\r\nlet counter = 0;\r\n//第二版搜索结果\r\nexport default function Comment() {\r\n    const [inputPageNum, setInputPageNum] = useState('');\r\n    const [songid, setSongid] = useState('');\r\n    const [result, setResult] = useState({\r\n        // 类型\r\n        //type: '1',\r\n        // 页容量\r\n        limit: 15,\r\n        // 页码\r\n        page: 1,\r\n        // 总条数\r\n        total: 0,\r\n\r\n        commentlist: [{\r\n            user: {\r\n                nickname: '',\r\n                avatarUrl:'',\r\n            },\r\n            beReplied: null,\r\n            artists: [],\r\n            pendantData: null,\r\n            showFloorComment: null,\r\n            status: null,\r\n            commentId: null,\r\n            content: null,\r\n            contentResource: null,\r\n            time: '',\r\n            timeStr: null,\r\n            needDisplayTime: null,\r\n            expressionUrl: null,\r\n            commentLocationType: null,\r\n            parentCommentId: null,\r\n            decoration: null,\r\n            repliedMark: null,\r\n            liked: null,\r\n            likedCount:null,\r\n        }],\r\n        hotcommentlist: [{\r\n            user: {\r\n                nickname: '',\r\n                avatarUrl:'',\r\n            },\r\n            beReplied: null,\r\n            artists: [],\r\n            pendantData: null,\r\n            showFloorComment: null,\r\n            status: null,\r\n            commentId: null,\r\n            content: null,\r\n            contentResource: null,\r\n            time: '',\r\n            timeStr: null,\r\n            needDisplayTime: null,\r\n            expressionUrl: null,\r\n            commentLocationType: null,\r\n            parentCommentId: null,\r\n            decoration: null,\r\n            repliedMark: null,\r\n            liked: null,\r\n            likedCount:null,\r\n        }],\r\n\r\n    });\r\n    let { id } = useParams();\r\n    let vid = id;\r\n\r\n    const hasPrevious = () => {\r\n        return counter === 1;\r\n    }\r\n    const goPage = (pageNum: number) => {\r\n        counter = pageNum;\r\n        comment({\r\n            id: vid,\r\n            limit: result.limit,\r\n            offset: (counter - 1) * result.limit,\r\n            //before:\r\n        }).then((response) => {\r\n            let res = response.data;\r\n            if(counter > 1){\r\n                setResult({\r\n                    hotcommentlist:result.hotcommentlist,\r\n                    commentlist: res.comments,\r\n                    total: res.total,\r\n                    //type: result.type,\r\n                    limit: result.limit,\r\n                    page: counter,\r\n                })\r\n            }else{\r\n                setResult({\r\n                    hotcommentlist:res.hotComments,\r\n                    commentlist: res.comments,\r\n                    total: res.total,\r\n                    //type: result.type,\r\n                    limit: result.limit,\r\n                    page: counter,\r\n                })\r\n            }\r\n           \r\n        })\r\n    }\r\n    const nextPage = () => {\r\n        console.log(counter);\r\n        console.log(vid);\r\n\r\n        counter++;\r\n        goPage(counter);\r\n    }\r\n    const previousPage = () => {\r\n        console.log(counter);\r\n        counter--;\r\n        goPage(counter);\r\n    }\r\n    const handleInput = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        setInputPageNum(e.target.value);\r\n    }\r\n    const submitInputPage = () => {\r\n        goPage(Number(inputPageNum));\r\n        setInputPageNum('');\r\n    }\r\n    const goDetail = (id: string, e: any) => {\r\n        console.log(id);\r\n        //window.open(`#/detail/${e}`, '_self')\r\n        window.open(`#/detail/${id}`, '_self')\r\n        //window.open(`#/search/${e.target.value}`, '_self')\r\n\r\n\r\n    }\r\n    useEffect(() => {\r\n        if (counter === 0) {\r\n            goPage(1);\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div>\r\n\r\n            <div>\r\n                <span style={{fontSize:\"20px\",margin:\"0% 2% 0 10%\"}}>评论</span><span style={{ margin: \"0px 0 0 0px\" }}>找到了{result.total}条结果</span>\r\n            </div>\r\n            <div style={{border:\" 2px solid rgb(219, 24, 17)\",margin:\"0% 10% 0 10%\"}}></div> \r\n            <div style={{margin:\"5% 10% 0 10%\"}}>精彩评论</div>\r\n            <div style={{border:\" 1px solid #000\",margin:\"0 10% 0 10%\"}}></div> \r\n            <List\r\n            style={{margin:\"0% 10% 0 10%\"}}\r\n                className=\"result-list\"\r\n                itemLayout=\"vertical\"\r\n                // dataSource={data}\r\n                // dataSource={result.commentlist}\r\n                dataSource={result.hotcommentlist}\r\n                renderItem={item => (\r\n                    <List.Item\r\n                    actions={[\r\n                        <div>点赞数:{item.likedCount} <LikeOutlined /></div>,\r\n\r\n                        <div>回复: <CommentOutlined /></div>,\r\n                      ]}>\r\n                                          \r\n                        <List.Item.Meta\r\n                            avatar={<Avatar size=\"large\" src={item.user.avatarUrl}/>}\r\n                            description={item.timeStr}\r\n                            title={<p>{item.user.nickname}</p>}\r\n                        />\r\n                        {item.content}                        \r\n                        \r\n                    </List.Item>\r\n                )}\r\n            />\r\n            <div style={{margin:\"2% 10% 0 10%\"}} >最新评论</div>\r\n            <div style={{border:\" 1px solid #000\",margin:\"0 10% 0 10%\"}}></div> \r\n            <List\r\n                itemLayout=\"vertical\"\r\n                style={{margin:\"0 10% 0 10%\"}}\r\n                className=\"result-list\"                \r\n                // dataSource={data}\r\n                dataSource={result.commentlist}\r\n                //dataSource={result.hotcommentlist}\r\n                renderItem={item => (\r\n                    <List.Item\r\n                    actions={[\r\n                        <div>点赞数:{item.likedCount} <LikeOutlined /></div>,\r\n\r\n                        <div>回复</div>,\r\n                      ]}>\r\n                                          \r\n                        <List.Item.Meta\r\n                            avatar={<Avatar size=\"large\" src={item.user.avatarUrl}/>}\r\n                            description={item.timeStr}\r\n                            title={<p>{item.user.nickname}</p>}\r\n                        />\r\n                        {item.content}                        \r\n                        \r\n                    </List.Item>\r\n                )}\r\n            />\r\n            \r\n            <Footer>\r\n            <div className=\"pages\" style={{margin:\"0 20% 0 10%\"}}>\r\n                <Button onClick={previousPage} disabled={hasPrevious()}>上一页</Button>\r\n               \r\n                <Button onClick={nextPage}>下一页</Button>\r\n                请输入您想跳转的页面:<input value={inputPageNum} onChange={handleInput} />\r\n                <Button onClick={submitInputPage}>跳转到此页</Button>\r\n            </div>\r\n            </Footer>\r\n\r\n        </div>\r\n    );\r\n}","import { format } from \"path\";\nimport React from \"react\";\nimport Lyric from \"./Lyric\";\nimport Comment from \"./Comment\";\nimport TopJumper from \"./TopJumper\";\n//import Lyric from \nclass Detail extends React.Component {\n    render() {\n        return (\n            <div>\n            <><Lyric /><p></p><Comment /><TopJumper /></>   \n            </div>\n        );\n    }\n}\n\nexport default Detail;","import React, { Component } from 'react'\nimport { Input } from 'antd'\nimport { SearchOutlined } from '@ant-design/icons'\nimport IndexTopMenu from '../IndexTopMenu'\n\nexport default class SearchTop extends Component {\n  goToSearchPage = (e:any) => {\n    window.open(`#/search/${e.target.value}`, '_self')\n    console.log(e.target.value)\n    // return <Router>\n    //   <Routes>\n    //     <Route path=\"/:keyword\" element={<FirstSearchResult/>}>\n    //     </Route>\n    //   </Routes>\n    // </Router>\n  }\n\n  render() {\n    return (\n      <>\n      {/* <IndexTopMenu/> */}\n      <div className='top-container'>\n          <Input\n            size='small'\n            // style={{width:200,paddingTop:0}}\n            prefix={<SearchOutlined />}\n            placeholder='搜索'\n            onPressEnter={this.goToSearchPage} />\n        </div></>\n    )\n  }\n}","import { Menu } from 'antd'\nimport { CustomerServiceOutlined, HeartOutlined} from '@ant-design/icons'\nimport React from 'react'\nimport { Link, Routes, HashRouter as Router, Route } from 'react-router-dom'\nimport SearchTop from './search/SearchTop'\nimport './IndexTopMenu.css'\nimport RecommendMusic from './find_music/RecommendMusic'\n\nconst { SubMenu } = Menu\n//主页顶部菜单\nclass IndexTopMenu extends React.Component {\n  state = {\n    current: 'mail',\n    redirect: 1\n  }\n\n  handleClick = (e: { key: any; }) => {\n    this.setState({ current: e.key })\n  }\n  recommendClick= () =>{\n      this.setState({\n          current:'mail',\n          redirect:this.state.redirect++,\n      })\n      console.log(this.state.redirect)\n      return(\n        <Routes>\n            <Route path=\"/recommend\" element={<RecommendMusic/>}>\n            </Route>\n        </Routes>\n      );\n  }\n\n\n  render() {\n    const { current, redirect } = this.state\n    return (\n      <nav>\n        <Menu\n          theme='dark'\n          // style={{width:1920,padding:16,fontSize:16}}\n          onClick={this.handleClick}\n          selectedKeys={[current]}\n          mode='horizontal'\n          id='TopMenu'\n        >\n          <SubMenu className='SubMenu' key='SubMenu' title='发现音乐' icon={<CustomerServiceOutlined />}>\n            <Menu.ItemGroup>\n              <Menu.Item key='recommend' onClick={this.recommendClick}>\n                <Link to='/recommend'>\n                  推荐\n                </Link>\n              </Menu.Item>\n              <Menu.Item key='top'>\n                <Link to='/top'>\n                  排行\n                </Link>\n              </Menu.Item>\n              <Menu.Item key='sheet'><Link to='/sheet'>\n                歌单\n              </Link></Menu.Item>\n              <Menu.Item key='liver'><Link to='/liver'>\n                电台\n              </Link></Menu.Item>\n              <Menu.Item key='musician'><Link to='/musician'>\n                歌手\n              </Link></Menu.Item>\n            </Menu.ItemGroup>\n          </SubMenu>\n          <Menu.Item key='myMusic' icon={<HeartOutlined />}>\n            <Link to='/my'>\n              我的音乐\n            </Link>\n          </Menu.Item>\n          <SearchTop />\n        </Menu>\n      </nav>\n    )\n  }\n}\n\nexport default IndexTopMenu","import {HashRouter as Router, Link, Route, Routes} from \"react-router-dom\";\nimport IndexContent from \"./IndexContent\";\nimport RecommendMusic from \"./find_music/RecommendMusic\";\nimport TopMusic from \"./find_music/TopMusic\";\nimport Sheet from \"./find_music/Sheet\";\nimport Liver from \"./find_music/Liver\";\nimport Musician from \"./find_music/Musician\";\nimport MyMusic from \"./my_music/MyMusic\";\nimport Login from \"./Login\";\nimport NotFound from \"./NotFound\";\nimport React from \"react\";\nimport FirstSearchResult from \"./search/FirstSearchResult\";\nimport SearchResult from \"./search/SearchResult\";\nimport Detail from \"./detail/Detail\";\nimport IndexTopMenu from \"./IndexTopMenu\";\nimport MenuRouter from \"../MenuRouter\";\n//各界面的路由，当写了新的页面时，请在这里添加路由\nexport default function ProjectRouter(){\n    //当输入的地址没有任何匹配时，跳转到404页面\n    return(\n        <>\n        <Router>\n        <IndexTopMenu/>\n            <div>\n                <Routes>\n                    <Route path='/' element={<IndexContent />} />\n                    <Route path='/recommend' element={<RecommendMusic />} />\n                    <Route path='/top' element={<TopMusic />} />\n                    <Route path='/sheet' element={<Sheet />} />\n                    <Route path='/liver' element={<Liver />} />\n                    <Route path='/musician' element={<Musician />} />\n                    <Route path='/my' element={<MyMusic />} />\n                    {/* <nav style={{ margin: 10 }}>\n                    <Link to=\"/\" style={{ padding: 5 }}>\n                        Home\n                    </Link>\n                    <Link to=\"/about\" style={{ padding: 5 }}>\n                        About\n                     </Link>\n                    </nav> */}\n                  \n\n                    <Route path='/login' element={<Login/>}/>\n                    {/*<Route path=\"/search/:keyword\" element={<FirstSearchResult/>} />*/}\n                    <Route path=\"/search/:keyword\" element={<SearchResult/>} />\n                    {/* <Route path=\"/detail\" element={<Detail/>}/> */}\n                    <Route path=\"/detail/:id\" element={<Detail/>}/>\n                    <Route path='*' element={<NotFound/>}/>\n                    {/* <IndexTopMenu/> */}\n                </Routes>\n                \n            </div>\n          \n        </Router>\n        </>\n    );\n}","import {Menu} from 'antd';\nimport {MailOutlined, AppstoreOutlined, SettingOutlined} from '@ant-design/icons';\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport IndexTopMenu from \"./components/IndexTopMenu\";\nimport MyMusic from \"./components/my_music/MyMusic\";\nimport RecommendMusic from \"./components/find_music/RecommendMusic\";\nimport SearchTop from './components/search/SearchTop'\nimport IndexContent from './components/IndexContent'\nimport TopMusic from './components/find_music/TopMusic'\nimport Sheet from './components/find_music/Sheet'\nimport Liver from './components/find_music/Liver'\nimport Musician from './components/find_music/Musician'\nimport Login from './components/Login'\nimport NotFound from './components/NotFound'\nimport ProjectRouter from \"./components/ProjectRouter\";\nimport { Link, Route, Routes } from 'react-router-dom';\n\nclass App extends React.Component {\n    render() {\n        return (\n\n            <>\n            \n            <ProjectRouter />\n           \n            </>\n        );\n    }\n}\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}